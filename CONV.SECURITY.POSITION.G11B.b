* @ValidationCode : N/A
* @ValidationInfo : Timestamp : 19 Jan 2021 11:14:56
* @ValidationInfo : Encoding : Cp1252
* @ValidationInfo : User Name : N/A
* @ValidationInfo : Nb tests success : N/A
* @ValidationInfo : Nb tests failure : N/A
* @ValidationInfo : Rating : N/A
* @ValidationInfo : Coverage : N/A
* @ValidationInfo : Strict flag : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version : N/A
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.

* Version 5 16/05/01  GLOBUS Release No. 200512 09/12/05
*-----------------------------------------------------------------------------
* <Rating>857</Rating>
*-----------------------------------------------------------------------------
    $PACKAGE SC.ScoSecurityPositionUpdate
      SUBROUTINE CONV.SECURITY.POSITION.G11B(ID,YREC,FILE)
*
*************************************************************************
* 13/5/2003 - GLOBUS_CI_10008894
*             CONVERSION.DETAIL Program should have field numbers
*             instead of field names
*
************************************************************************
$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_F.SECURITY.TRANS
$INSERT I_F.SECURITY.POSITION
$INSERT I_F.SC.TRANS.TYPE
$INSERT I_F.DATES

      F.SECURITY.POSITION = ''
      FN.SECURITY.POSITION = 'F.SECURITY.POSITION'
      CALL OPF(FN.SECURITY.POSITION,F.SECURITY.POSITION)
*
      R.SECURITY.POSITION = YREC
      K.SECURITY.POSITION = ID
      IF NOT(YREC) THEN
         E = 'RECORD & NOT FOUND ON FILE & ':FM:K.SECURITY.POSITION:VM:'F.SECURITY.POSITION'
         GOTO FATAL.ERR
      END
*
      CONCAT.IDS = '' ; ETEXT = ''
      CALL F.READ('F.TRN.CON.DATE',K.SECURITY.POSITION,CONCAT.IDS,F.TRN.CON.DATE,ETEXT)
      IF ETEXT THEN
         CONCAT.IDS=""
      END
*************************************************************************
* READ ALL TRANSACTIONS FROM HIST FILE AND OBTAIN THE NET
* NOMINAL VALUE TOTAL FOR TRANSACTIONS PRIOR TO AND INCLUDING
* TRADE DATE
* AND ADD THIS FIGURE TO THE CLOSING NOMINAL BALANCE WHICH IS
* OBTAINED FROM THE SECURITY.POSITION FILE
*************************************************************************
      ZZ=COUNT(CONCAT.IDS,FM)+ (CONCAT.IDS # '')
      BOOK.COST = 0 ; BOOK.COST.REF = 0 ; BOOK.COST.BSE = 0
*
      GR.BOOK.SEC.CCY = 0 ; GR.BOOK.REF.CCY = 0 ; GR.BOOK.BSE.CCY = 0
*
      VAL.COST.SEC.CCY = 0 ; VAL.COST.REF.CCY = 0 ; VAL.COST.BSE.CCY = 0
*
      LOOP
         REMOVE HIST.ID FROM CONCAT.IDS SETTING YDELIM
      WHILE HIST.ID:YDELIM
         DOT.POS = COUNT(HIST.ID,'.')
         K.HIST = FIELD(HIST.ID,'.',DOT.POS,2)
         TRANS.REC = '' ; ETEXT = ''
         CALL F.READ('F.SECURITY.TRANS',K.HIST,TRANS.REC,F.SECURITY.TRANS,ETEXT)
         IF ETEXT THEN
            TRANS.REC=""
            E="F.SECURITY.TRANS RECORD MISSING ":K.HIST
            GOTO FATAL.ERR
         END
* CI_10008894 S
         VALUE.DATE = TRANS.REC<10>
         IF TRANS.REC<52> THEN GOTO GET.NEXT.Z
* CI_10008894 E
* CI_10008894         VALUE.DATE = TRANS.REC<SC.SCT.VALUE.DATE>
* CI_10008894         IF TRANS.REC<SC.SCT.REVERSAL.DATE> THEN GOTO GET.NEXT.Z
*********************************
* IGNORE SECURITY TRANSACTIONS
* WHICH HAVE BEEN REVERSED .
*********************************
*
* CHECK THAT THE PRIME RECORD WHICH CREATED THE SECURITY
* TRANS RECORD HAS BEEN AUTHORISED.
*
         K.MAIN.REC = FIELD(K.HIST,'.',1)
         BEGIN CASE
            CASE K.MAIN.REC[1,6] = 'SCTRSC'
               YFILE = 'SEC.TRADE'
            CASE K.MAIN.REC[1,6] = 'SECTSC'
               YFILE = 'SECURITY.TRANSFER'
            CASE K.MAIN.REC[1,6] = 'SCCOST'
               YFILE = 'SC.BOOK.COST'
            CASE K.MAIN.REC[1,6] = 'DIARSC'
               YFILE = 'DIARY'
            CASE OTHERWISE
               YFILE = ''
         END CASE
         IF YFILE THEN
            YFLD = ''
            CALL DBR(YFILE:FM:1,K.MAIN.REC,YFLD)
            IF ETEXT = '' THEN AUTH.REC = 1 ELSE AUTH.REC = ''
         END ELSE AUTH.REC = 1
*
         IF AUTH.REC THEN
* CI_10008894 S
            BOOK.COST = BOOK.COST + TRANS.REC<69>
            BOOK.COST.REF = BOOK.COST.REF + TRANS.REC<70>
            BOOK.COST.BSE = BOOK.COST.BSE + TRANS.REC<71>
*
            GR.BOOK.SEC.CCY = GR.BOOK.SEC.CCY + TRANS.REC<72>
            GR.BOOK.REF.CCY = GR.BOOK.REF.CCY + TRANS.REC<73>
            GR.BOOK.BSE.CCY = GR.BOOK.BSE.CCY + TRANS.REC<74>
            IF VALUE.DATE LE TODAY THEN
               VAL.COST.SEC.CCY = VAL.COST.SEC.CCY + TRANS.REC<69>
               VAL.COST.REF.CCY = VAL.COST.REF.CCY + TRANS.REC<70>
               VAL.COST.BSE.CCY = VAL.COST.BSE.CCY + TRANS.REC<71>
            END
* CI_10008894 E
*
* CI_10008894            BOOK.COST = BOOK.COST + TRANS.REC<SC.SCT.BOOK.COST.SEC.CCY>
* CI_10008894             BOOK.COST.REF = BOOK.COST.REF + TRANS.REC<SC.SCT.BOOK.COST.REF.CCY>
* CI_10008894             BOOK.COST.BSE = BOOK.COST.BSE + TRANS.REC<SC.SCT.BOOK.COST.BSE.CCY>
*
* CI_10008894             GR.BOOK.SEC.CCY = GR.BOOK.SEC.CCY + TRANS.REC<SC.SCT.GR.BK.COST.SEC.CCY>
* CI_10008894             GR.BOOK.REF.CCY = GR.BOOK.REF.CCY + TRANS.REC<SC.SCT.GR.BK.COST.REF.CCY>
* CI_10008894             GR.BOOK.BSE.CCY = GR.BOOK.BSE.CCY + TRANS.REC<SC.SCT.GR.BK.COST.BSE.CCY>
* CI_10008894             IF VALUE.DATE LE TODAY THEN
* CI_10008894                VAL.COST.SEC.CCY = VAL.COST.SEC.CCY + TRANS.REC<SC.SCT.BOOK.COST.SEC.CCY>
* CI_10008894                VAL.COST.REF.CCY = VAL.COST.REF.CCY + TRANS.REC<SC.SCT.BOOK.COST.REF.CCY>
* CI_10008894                VAL.COST.BSE.CCY = VAL.COST.BSE.CCY + TRANS.REC<SC.SCT.BOOK.COST.BSE.CCY>
* CI_10008894             END
         END
GET.NEXT.Z:
      REPEAT
*
* CI_10008894 S
      R.SECURITY.POSITION<45> = BOOK.COST
      R.SECURITY.POSITION<46> = BOOK.COST.REF
      R.SECURITY.POSITION<47> = BOOK.COST.BSE
*
      R.SECURITY.POSITION<48> = GR.BOOK.SEC.CCY
      R.SECURITY.POSITION<49> = GR.BOOK.REF.CCY
      R.SECURITY.POSITION<50> = GR.BOOK.BSE.CCY
*
      R.SECURITY.POSITION<51> = VAL.COST.SEC.CCY
      R.SECURITY.POSITION<52> = VAL.COST.REF.CCY
      R.SECURITY.POSITION<53> = VAL.COST.BSE.CCY
*
* CI_10008894 E
*
* CI_10008894    R.SECURITY.POSITION<SC.SCP.BOOK.COST.SEC.CCY> = BOOK.COST
* CI_10008894    R.SECURITY.POSITION<SC.SCP.BOOK.COST.REF.CCY> = BOOK.COST.REF
* CI_10008894    R.SECURITY.POSITION<SC.SCP.BOOK.COST.BSE.CCY> = BOOK.COST.BSE
*
* CI_10008894    R.SECURITY.POSITION<SC.SCP.GR.BK.COST.SEC.CCY> = GR.BOOK.SEC.CCY
* CI_10008894    R.SECURITY.POSITION<SC.SCP.GR.BK.COST.REF.CCY> = GR.BOOK.REF.CCY
* CI_10008894    R.SECURITY.POSITION<SC.SCP.GR.BK.COST.BSE.CCY> = GR.BOOK.BSE.CCY
*
* CI_10008894    R.SECURITY.POSITION<SC.SCP.VAL.DAT.BOOK.COST> = VAL.COST.SEC.CCY
* CI_10008894    R.SECURITY.POSITION<SC.SCP.VAL.DAT.BKCOST.REF> = VAL.COST.REF.CCY
* CI_10008894    R.SECURITY.POSITION<SC.SCP.VAL.DAT.BKCOST.BSE> = VAL.COST.BSE.CCY
*
*
      YREC = R.SECURITY.POSITION
*
      RETURN
*
FATAL.ERR:
*
      TEXT = E ; CALL FATAL.ERROR('CONV.SECURITY.TRANS.G11')
   END
